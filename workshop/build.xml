<?xml version="1.0" encoding="iso-8859-1"?>
<!--
=======================================================================
= Description: ant build for openMDX/Example Workshop
= Copyright:   (c) 2006-2016 OMEX AG
=======================================================================
 *
 * This software is published under the BSD license
 * as listed below.
 * 
 * Copyright (c) 2006-2016, OMEX AG, Switzerland
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met:
 * 
 * Redistribution and use in source and binary forms, with or
 * without modification, are permitted provided that the following
 * conditions are met:
 * 
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * 
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 * 
 * * Neither the name of the openMDX team nor the names of its
 *   contributors may be used to endorse or promote products derived
 *   from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
 * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
-->
<project 
	name="openmdx-workshop" 
	default="-projecthelp"
	xmlns:openmdx="xri://(antlib:org.openmdx.tools.ant)"
	xmlns:antcontrib="antlib:net.sf.antcontrib"
>
	<description>Builds the openMDX/Workshop component</description>
	<property name="project.specification.title" value="openMDX/Example.Workshop"/>
	<property name="project.implementation.prefix" value="openmdx-example"/>

	<!-- Slash separated platform list, the last entry being the default -->
	<property name="project.platform.list" value="jre-1.8"/>

	<!-- Included Ant Projects -->
	<import file="../opt/openmdx-2.15.0/ant/etc/ant/build-properties.xml"/>
	<import file="../opt/openmdx-2.15.0/ant/etc/ant/build-library.xml"/>

	<path id="postgresql-9.lib">
		<pathelement location="${project.home}/opt/postgresql/${build.target.platform}/postgresql-9/lib/postgresql-9.3.jdbc41.jar"/>
	</path>
	<path id="hsqldb-2.lib">
		<pathelement location="${project.home}/opt/hsqldb/${build.target.platform}/hsqldb-2/lib/hsqldb.jar"/>
	</path>
	<path id="project.lib.classpath">
	    <path refid="osgi.enterprise.lib"/>
	    <path refid="osgi.extension.lib"/>
		<path refid="openmdx.core.lib"/>
		<pathelement location="${openmdx.home}/java2/${build.target.platform}/extension/lib/icu4j.jar"/>
	</path>
	<path id="project.bin.classpath">
		<path refid="project.lib.classpath"/>
	    <path refid="postgresql-9.lib"/>
	    <path refid="hsqldb-2.lib"/>
		<pathelement location="${build.dir}/bin"/>
		<pathelement location="${build.dir}/src/resource"/>
		<pathelement location="${basedir}/src/resource"/>		
		<pathelement location="${basedir}/src/ear/openmdx-workshop.ear/APP-INF/lib/openmdx-workshop.jar"/>		
		<pathelement location="${build.dir}/model/${ant.project.name}.openmdx-xmi.zip"/>
		<pathelement location="${openmdx.home}/${build.target.platform}/portal/lib/openmdx-portal.jar"/>		
	</path>
	<patternset id="openmdx-example-workshop.jar.content">
		<include name="org/openmdx/example/workshop1/**"/>
		<include name="META-INF/orm.xml"/>
		<include name="META-INF/openmdxmof.properties"/>		
		<include name="META-INF/jdoconfig.xml"/>		
		<include name="META-INF/WorkshopStandard.properties"/>		
		<include name="META-INF/WorkshopVolatile.properties"/>		
	</patternset>	
	<openmdx:archivefilterchain id="archive.filter">
		<include name="META-INF/application.xml"/>
		<tokenfilter>
			<replacestring from="gateway.jar/" to="gateway.jar"/>
			<replacestring from="example.jar/" to="example.jar"/>
		</tokenfilter>
	</openmdx:archivefilterchain>
	<patternset id="project.junit.test.case">
		<include name="org/openmdx/test/example/workshop1/**/Test*.java"/>
		<patternset refid="build.exclude"/>
	</patternset>

	<!-- ******************************************************************* -->
	<!-- * generate -->
	<!-- ******************************************************************* -->
	<target name="generate" description="Generate version, jt and model dependend files" depends="build-init">
		<ant dir="${openmdx.home}/core" inheritAll="false" target="prepare">
			<property name="build.target.platform" value="${build.java.platform}"/>
		</ant>
		<antcall target="-preprocess-model-files-"/>
	</target>

	<!-- ******************************************************************* -->
	<!-- * deliverables -->
	<!-- ******************************************************************* -->
	<target 
		name="deliverables" 
		description="Populate the project's deliverables directory" 
		depends="deliverables-init,java-archives,source-archives"
	/>
	<!-- ******************************************************************* -->
	<!-- * assemble -->
	<!-- ******************************************************************* -->
	<target 
	  name="assemble" 
	  description="Builds the openMDX/Example Workshop EARs" 
	  depends="build-init,-openmdx-workshop.ear-"
	/>
	<!-- ******************************************************************* -->
	<!-- * distribution -->
	<!-- ******************************************************************* -->
	<target 
		name="distribution" 
		description="Creates a distribution" 
		depends="distribution-init,deliverables"
	>
		<openmdx:archive 
			destfile="${distribution.dir}/${project.implementation.prefix}-${project.implementation.version}-${base.dir.name}.${build.target.platform}."
			format="${distribution.format}"
			checksum="MD5"
		>
			<openmdx:archivefileset 
				dir="${basedir}" 
				prefix="${project.implementation.prefix}-${project.implementation.version}/${base.dir.name}"
			>
				<include name="LICENSE"/>
				<include name="README"/>
				<include name="build.xml"/>
				<include name="run.xml"/>
				<include name="project.properties"/>
				<include name=".cvsignore"/>
				<include name="build.properties"/>
				<include name="etc/**"/>
			</openmdx:archivefileset>
			<openmdx:archivefileset 
				dir="${project.home}" 
				prefix="${project.implementation.prefix}-${project.implementation.version}"
			>
				<include name="source-archive/workshop/**"/>
				<include name="${build.target.platform}/workshop/**"/>
			</openmdx:archivefileset>
			<openmdx:archivefileset 
				dir="${project.home}/${base.dir.name}" 
				prefix="${project.implementation.prefix}-${project.implementation.version}/${base.dir.name}/"
			>
				<include name=".classpath"/>
				<include name=".project"/>
			</openmdx:archivefileset>
			<openmdx:archivefilterchain>
				<patternset>
					<include name="**/.project"/>
					<include name="**/.classpath"/>
				</patternset>
				<tokenfilter>
				    <replaceregex pattern="( \(.*\))? ~ " replace=" (${project.implementation.version}) ~ "/>
				</tokenfilter>
			</openmdx:archivefilterchain>
		</openmdx:archive>
	</target>
		
	<!-- ******************************************************************* -->
	<!-- * java-archives -->
	<!-- ******************************************************************* -->
	<target name="java-archives" depends="deliverables-init,build">
		<openmdx:archive
			destfile="${deliver.dir}/lib/openmdx-workshop."
			format="jar"
			duplicate="preserve"
		>
			<openmdx:manifest>
				<attribute name="Specification-Title" value="${project.specification.title} Library openMDX/Example Workshop"/>
				<attribute name="Implementation-Title" value="openmdx-example-workshop for ${build.target.platform}"/>
			</openmdx:manifest>
			<openmdx:archivefileset dir="${build.dir}/bin">
				<patternset refid="openmdx-example-workshop.jar.content"/>
			</openmdx:archivefileset>
			<openmdx:archivefileset dir="${build.dir}/src/resource">
				<patternset refid="openmdx-example-workshop.jar.content"/>
			</openmdx:archivefileset>
			<openmdx:archivefileset dir="${basedir}/src/resource" whenmissing="skip">
				<patternset refid="openmdx-example-workshop.jar.content"/>
			</openmdx:archivefileset>
			<openmdx:archivefileset dir="${basedir}/src/ear/openmdx-workshop.ear/APP-INF/lib/openmdx-workshop.jar" whenmissing="skip">
				<patternset refid="openmdx-example-workshop.jar.content"/>
			</openmdx:archivefileset>
			<openmdx:archivefileset src="${build.dir}/model/${ant.project.name}.openmdx-xmi.zip">
				<patternset refid="openmdx-example-workshop.jar.content"/>
			</openmdx:archivefileset>
		</openmdx:archive>
	</target>
	<!-- ******************************************************************* -->
	<!-- * -openmdx-workshop.ear- -->
	<!-- ******************************************************************* -->
	<target name="-openmdx-workshop.ear-">
		<mkdir dir="${tmp.dir}"/>
		<mkdir dir="${tmp.dir}/lib"/>
		<mkdir dir="${build.dir}/module"/>
		<mkdir dir="${deliver.dir}/deployment-unit"/>
		<!-- WAR -->
		<openmdx:archive format="war" destfile="${build.dir}/module/openmdx-workshop." duplicate="preserve">
			<manifest>
				<attribute name="Specification-Title" value="${project.specification.title} WAR"/>
				<attribute name="Implementation-Title" value="WAR for ${build.target.platform}"/>
			</manifest>
			<zipfileset dir="src/data/org.openmdx.example.workshop">
				<include name="**/*"/>
			</zipfileset>
			<openmdx:archivefileset dir="src/ear/openmdx-workshop.ear/openmdx-workshop.war/WEB-INF" prefix="WEB-INF">
				<patternset refid="standard.edition.pattern"/>
				<patternset refid="openejb-3.edition.pattern"/>
				<patternset>
					<include name="config/**"/>
				</patternset>
			</openmdx:archivefileset>			
			<zipfileset src="${openmdx.home}/${build.target.platform}/portal/deployment-unit/openmdx-inspector.war">
				<include name="**/*"/>
			</zipfileset>
			<zipfileset dir="src/ear/openmdx-workshop.ear/openmdx-workshop.war/META-INF" prefix="META-INF" />			
		</openmdx:archive>
		<!-- EAR -->
		<openmdx:archive format="ear" destfile="${deliver.dir}/deployment-unit/openmdx-workshop.ear" duplicate="preserve">
			<manifest>
				<attribute name="Specification-Title" value="${project.specification.title} App EAR"/>
				<attribute name="Implementation-Title" value="App EAR for ${build.target.platform}"/>
			</manifest>
			<fileset dir="${build.dir}/module">
				<include name="openmdx-workshop.war"/>
			</fileset>
			<zipfileset dir="${deliver.dir}/lib" prefix="APP-INF/lib">
				<include name="*.jar"/>
			</zipfileset>
			<zipfileset dir="${openmdx.home}/${build.target.platform}/core/lib" prefix="APP-INF/lib">
				<include name="openmdx-base.jar"/>
			</zipfileset>
			<zipfileset dir="${openmdx.home}/${build.target.platform}/core/lib" prefix="APP-INF/lib">
				<include name="openmdx-application.jar"/>
			</zipfileset>
			<zipfileset dir="${openmdx.home}/${build.target.platform}/portal/lib" prefix="APP-INF/lib">
				<include name="openmdx-portal.jar"/>
			</zipfileset>
			<zipfileset dir="${openmdx.home}/${build.target.platform}/security/lib" prefix="APP-INF/lib">
				<include name="openmdx-security.jar"/>
			</zipfileset>
			<zipfileset dir="${openmdx.home}/codehaus/${build.target.platform}/groovy/lib" prefix="APP-INF/lib">
				<include name="groovy.jar"/>
			</zipfileset>
			<zipfileset dir="src/ear/openmdx-workshop.ear/META-INF" prefix="META-INF">
				<include name="application.xml"/>
				<patternset refid="standard.edition.pattern"/>
				<patternset refid="openejb-3.edition.pattern"/>
			</zipfileset>
			<openmdx:archivefilterchain refid="archive.filter"/>			
		</openmdx:archive>
	</target>

</project>
